name: AWS RUM Web Client Release

on:
    workflow_dispatch:

jobs:
    publish_to_cdn:
        name: Publish New Release
        runs-on: ubuntu-latest
        environment: cdn-prod-release
        permissions:
            id-token: write
            contents: write

        steps:
            # - name: Checkout AWS RUM Web Client Repository
            #   uses: actions/checkout@v4

            # - name: Setup Node
            #   uses: actions/setup-node@v4
            #   with:
            #       node-version: '20.x'
            #       registry-url: 'https://registry.npmjs.org'

            # - name: Cache NPM modules
            #   uses: actions/cache@v4
            #   with:
            #       path: ~/.npm
            #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            #       restore-keys: |
            #           ${{ runner.os }}-node-

            # - name: Build Release
            #   run: |
            #       npm ci
            #       npm run release

            # - name: Install PlayWright
            #   run: npx playwright install --with-deps chromium

            - name: Configure AWS Credentials for Gamma Deployment
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  role-to-assume: ${{ secrets.ROLE_GAMMA }}
                  aws-region: us-east-1

            # - name: Publish to CloudWatch RUM Gamma CDN
            #   id: publish-cdn-gamma
            #   run: |
            #       chmod u+x .github/scripts/deploy.sh
            #       .github/scripts/deploy.sh ${{ secrets.BUCKET_GAMMA }}

            # - name: Validate Gamma versions.csv file
            #   run: |
            #       chmod u+x .github/scripts/validate_versions.sh
            #       .github/scripts/validate_versions.sh ${{ secrets.BUCKET_GAMMA }}

            - name: Configure AWS Credentials for Gamma Smoke Test
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  role-to-assume: ${{ secrets.SMOKE_TEST_ROLE }}
                  aws-region: us-east-1

            # - name: Update Gamma Smoke Test Application
            #   id: update-smoke-test-gamma-cdn
            #   run: |
            #       chmod u+x .github/scripts/update_smoke_test.sh
            #       .github/scripts/update_smoke_test.sh ${{ secrets.SMOKE_MONITOR }} ${{ secrets.SMOKE_REGION }} ${{ secrets.SMOKE_ARN }} ${{ secrets.SMOKE_IDENTITY }} ${{ secrets.CONFIG_ENDPOINT }} ${{ secrets.CDN_GAMMA }} ${{ secrets.SMOKE_MONITOR_2 }} ${{ secrets.SMOKE_ARN_2 }} ${{ secrets.SMOKE_IDENTITY_2 }}

            # - name: Build Smoke Test Application - NPM/ES
            #   id: build-npm-es-application-pre-release
            #   run: |
            #       chmod u+x .github/scripts/build_npm_applications.sh
            #       .github/scripts/build_npm_applications.sh "PRE" "NPM-ES"

            # - name: Build Smoke Test Application - NPM/CJS
            #   id: build-npm-cjs-application-pre-release
            #   run: |
            #       chmod u+x .github/scripts/build_npm_applications.sh
            #       .github/scripts/build_npm_applications.sh "PRE" "NPM-CJS"

            # - name: Upload Gamma Smoke Tests to CloudFront
            #   id: upload-smoke-test-gamma
            #   run: |
            #       chmod u+x .github/scripts/upload_smoke_test.sh
            #       .github/scripts/upload_smoke_test.sh ${{ secrets.SMOKE_BUCKET }}

            # - name: Run Smoke Test (NPM ES)
            #   env:
            #       URL: ${{ secrets.SMOKE_URL }}
            #       MONITOR: ${{ secrets.SMOKE_MONITOR }}
            #       MONITOR2: ${{ secrets.SMOKE_MONITOR_2 }}
            #       ENDPOINT: ${{ secrets.SMOKE_ENDPOINT }}
            #       NAME: ${{ secrets.SMOKE_MONITOR_NAME }}
            #       INSTALL_METHOD: 'NPM-ES'
            #   run: npm run smoke:headless
            #   timeout-minutes: 10

            # - name: Run Smoke Test (NPM CJS)
            #   env:
            #       URL: ${{ secrets.SMOKE_URL }}
            #       MONITOR: ${{ secrets.SMOKE_MONITOR }}
            #       MONITOR_2: ${{ secrets.SMOKE_MONITOR_2 }}
            #       ENDPOINT: ${{ secrets.SMOKE_ENDPOINT }}
            #       NAME: ${{ secrets.SMOKE_MONITOR_NAME }}
            #       INSTALL_METHOD: 'NPM-CJS'
            #   run: npm run smoke:headless
            #   timeout-minutes: 10

            # - name: Run Gamma Smoke Test (CDN GAMMA)
            #   env:
            #       URL: ${{ secrets.SMOKE_URL }}
            #       MONITOR: ${{ secrets.SMOKE_MONITOR }}
            #       ENDPOINT: ${{ secrets.SMOKE_ENDPOINT }}
            #       NAME: ${{ secrets.SMOKE_MONITOR_NAME }}
            #       INSTALL_METHOD: 'CDN'
            #   run: npm run smoke:headless

            # - name: Configure AWS Credentials for Prod Deployment
            #   uses: aws-actions/configure-aws-credentials@v1
            #   with:
            #       role-to-assume: ${{ secrets.ROLE }}
            #       aws-region: us-east-1

            # - name: Publish to CloudWatch RUM Prod CDN
            #   id: publish-cdn-prod
            #   run: |
            #       chmod u+x .github/scripts/deploy.sh
            #       .github/scripts/deploy.sh ${{ secrets.BUCKET }}

            # - name: Validate Prod versions.csv file
            #   run: |
            #       chmod u+x .github/scripts/validate_versions.sh
            #       .github/scripts/validate_versions.sh ${{ secrets.BUCKET }}

            # - name: Configure AWS Credentials for Prod Smoke Test
            #   uses: aws-actions/configure-aws-credentials@v1
            #   with:
            #       role-to-assume: ${{ secrets.SMOKE_TEST_ROLE }}
            #       aws-region: us-east-1

            # - name: Update Prod Smoke Test Application
            #   id: update-smoke-test-prod-cdn
            #   run: |
            #       chmod u+x .github/scripts/update_smoke_test.sh
            #       .github/scripts/update_smoke_test.sh ${{ secrets.SMOKE_MONITOR }} ${{ secrets.SMOKE_REGION }} ${{ secrets.SMOKE_ARN }} ${{ secrets.SMOKE_IDENTITY }} ${{ secrets.CONFIG_ENDPOINT }} ${{ secrets.CDN }} ${{ secrets.SMOKE_MONITOR_2 }} ${{ secrets.SMOKE_ARN_2 }} ${{ secrets.SMOKE_IDENTITY_2 }}

            # - name: Upload Prod Smoke Tests to CloudFront
            #   id: upload-smoke-test-prod
            #   run: |
            #       chmod u+x .github/scripts/upload_smoke_test.sh
            #       .github/scripts/upload_smoke_test.sh ${{ secrets.SMOKE_BUCKET }}

            # - name: Run Prod Smoke Test (CDN)
            #   env:
            #       URL: ${{ secrets.SMOKE_URL }}
            #       MONITOR: ${{ secrets.SMOKE_MONITOR }}
            #       MONITOR_2: ${{ secrets.SMOKE_MONITOR_2 }}
            #       ENDPOINT: ${{ secrets.SMOKE_ENDPOINT }}
            #       NAME: ${{ secrets.SMOKE_MONITOR_NAME }}
            #       INSTALL_METHOD: 'CDN'
            #   run: npm run smoke:headless

            # - name: Publish to NPM
            #   run: npm publish
            #   env:
            #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            # - name: Build Smoke Test Application - NPM/ES (Post NPM Release)
            #   id: build-npm-es-application-post-release
            #   run: |
            #       chmod u+x .github/scripts/build_npm_applications.sh
            #       .github/scripts/build_npm_applications.sh "POST" "NPM-ES"

            # - name: Build Smoke Test Application - NPM/CJS (Post NPM Release)
            #   id: build-npm-cjs-application-post-release
            #   run: |
            #       chmod u+x .github/scripts/build_npm_applications.sh
            #       .github/scripts/build_npm_applications.sh "POST" "NPM-CJS"

            # - name: Create GitHub Release
            #   id: create_release
            #   uses: actions/create-release@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       tag_name: 'v${{ steps.publish-cdn.outputs.current-version }}'
            #       release_name: 'Release ${{ steps.publish-cdn.outputs.current-version }}'
            #       body: 'See [CHANGELOG](https://github.com/aws-observability/aws-rum-web/blob/main/CHANGELOG.md) for details.'
            #       draft: true
            #       prerelease: false
